// PC
@bothMargin: 215px;

// Mobile
@mobileNavHeight: 120px;

@tokenColorList: {
    usdt: linear-gradient(90deg, #fcd144 85.54%, #ffad33 98.08%);
    usdc: linear-gradient(90deg, #26a17b 85.54%, #0c8f67 98.08%);
    usd: linear-gradient(116.98deg, #611bf6 31.39%, #8d33ff 83.13%);
    btc: linear-gradient(116.98deg, #f6911b 31.39%, #ffcb44 83.13%);
    eth: linear-gradient(116.98deg, #c4c3c7 31.39%, #72727a 83.13%);
}

;

/* 
Mixin to generate random number;
int should be 0 or 1, 1 being to make it an integer 
*/
.makeRandom(@min: 0, @max: @min+1, @int: 0) {
    .checkInt() {
        @getNum: `Math.random() * (@{max} - @{min} + @{int})`;
        @base: unit(`@{int}==1 ? Math.floor(@{getNum}) : @{getNum}`);
    }

    .checkInt();
    @randNum: @base + @min;
}

.link {
    cursor: pointer;
}

.global {

    // clear all of gap, it could be outer or inner
    *,
    *:before,
    *:after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        user-select: none;
    }

    // body加权，覆盖组件库的基础样式
    body {

        p,
        ul {
            margin: 0;
            padding: 0;
            outline: none;
            border: none;
        }

        h1,
        h2,
        h3,
        h4,
        h5,
        p {
            word-break: break-word;
            white-space: pre-line;
            margin: 0;
        }

        span {
            word-break: break-word;
        }
    }

    // scroll bar
    *::-webkit-scrollbar {
        display: none;
    }

    * {
        -ms-overflow-style: none;
        /* IE 10+ */
        scrollbar-width: none;
        /* Firefox */
    }

    // font
    body {
        font-family: Poppins, sans-serif;
    }

    // root
    #root {
        overflow-x: hidden;
        position: relative;
        z-index: 1;
    }

    // 同级多有可能是弹窗一类组件，尽量给高层级
    #root~div,
    #root~section {
        position: relative;
        z-index: 10;
    }

    .container {
        .pc( {
                max-width: 100vw;
                min-height: 100vh;
            }

        );

        .mobile( {
                max-width: 750px;
            }

        );
    }

    // 页面级容器
    // 必须加标签，否则mix-blend-mode失效
    section[class$='-container'] {
        z-index: 0;
        flex: 1;
    }
}

// flex布局下增加填充块
.fill {
    display: flex;
    width: 100%;

    &::before {
        content: '';
        display: inline-block;
        flex: 1;
        height: 100%;
        width: 100%;
    }
}

.glow {
    transition: filter 0.2s;

    &:hover {
        filter: brightness(120%);
    }
}

.mobile(@class) {
    @media (max-width: 750px) {
        @class();
    }
}

.pc(@class) {
    @media (min-width: 751px) {
        @class();
    }
}

.token-color(@geometric) {
    each(@tokenColorList, {
            &.@{geometric}-@{key} {
                & when(@geometric=bar) {
                    background: @value;
                }

                & when(@geometric=dot) {
                    &:before {
                        background: @value;
                    }
                }
            }
        }

    );
}

// 圆点
.dot(@size: 16px, @marginRight: 0px, @bgColor: transparent) {
    display: flex;
    align-items: center;

    &:before {
        content: '';
        width: @size;
        height: @size;
        border-radius: 50%;
        display: inline-block;
        background-color: @bgColor;
        flex-shrink: 0;
        margin-right: @marginRight;
    }

    & when (@bgColor=transparent) {
        .token-color(dot);
    }
}

// 背景图片基本配置，可用来继承
.bgImage {
    background-position: center;
    background-repeat: no-repeat;
    background-color: transparent;
    background-size: contain;
    display: inline-block;
    flex-shrink: 0;
    flex-grow: 0;
}

// 背景图片工具集
#bgImage {

    // 基本类型
    .background(@bgImage, @bgColor: transparent) {
        background-position: center;
        background-repeat: no-repeat;
        background-image: url(@bgImage);
        background-color: @bgColor;
        background-size: contain;
        flex-shrink: 0;
    }

    // 动态背景图。用合成的方式来保持缩放比例不被破坏
    .dinamicBg(@image, @ratio: 50%, @direct: 'horizontal') {
        position: relative;

        &:before {
            flex: 1;
            content: '';
            position: absolute;
            background-size: cover;
            background-repeat: no-repeat;
            background-image: url(@image);
            pointer-events: none;
            z-index: -1;

            & when (@direct ='horizontal') {
                width: calc(@ratio + 1px);
                height: 100%;
                top: 50%;
                transform: translateY(-50%);
                left: 0;
                background-position: left top;
            }

            & when (@direct ='vertical') {
                width: 100%;
                height: calc(@ratio + 1px);
                left: 50%;
                transform: translateX(-50%);
                top: 0;
                background-position: left top;
            }
        }

        &:after {
            flex: 1;
            content: '';
            position: absolute;
            background-size: cover;
            background-repeat: no-repeat;
            background-image: url(@image);
            pointer-events: none;
            z-index: -1;

            & when (@direct ='horizontal') {
                width: calc(@ratio + 1px);
                height: 100%;
                top: 50%;
                transform: translateY(-50%);
                right: 0;
                background-position: right bottom;
            }

            & when (@direct ='vertical') {
                width: 100%;
                height: calc(@ratio + 1px);
                left: 50%;
                transform: translateX(-50%);
                bottom: 0;
                background-position: left bottom;
            }
        }
    }

    // 图标
    .icon(@size, @bgImage, @bgColor: transparent, @pure: true) {
        #bgImage.background(@bgImage, @bgColor);

        width: @size;
        height: @size;
        display: inline-block;

        & when (@pure =true) {
            border: none;
            outline: none;
            margin: 0;
            padding: 0;
        }
    }

    // 按钮
    .button(@bgImage, @bgColor: transparent) {
        #bgImage.background(@bgImage, @bgColor);

        border: none;
        outline: none;
        margin: 0;
        padding: 0;
    }
}

#position {
    .parent() {
        position: relative;
    }

    .absHorizCenter(@moveTop: -20%, @top: 0) {
        position: absolute;
        left: 50%;
        top: @top;
        transform: translate(-50%, @moveTop);
    }

    .absLtCorner(@move: translate(0%, 0%)) {
        position: absolute;
        left: 0;
        top: 0;
        transform: @move;
    }

    .absRtCorner(@move: translate(0%, 0%)) {
        position: absolute;
        right: 0;
        top: 0;
        transform: @move;
    }

    .absRbCorner(@move: translate(0%, 0%)) {
        position: absolute;
        right: 0;
        bottom: 0;
        transform: @move;
    }
}

// 手机版的页面级别容器
.mobile-container(@image: '') {
    #bgImage.background(@image);
    padding-top: @mobileNavHeight;
    display: flex;
    flex-direction: column;
    min-width: 100vw;
    min-height: 100vh;
    background-size: 100% 100%;
    background-position: 0 0;
    padding-bottom: 300px;
}

// 混沌效果
.setChaos(@num: 6) {
    each(range(@num), {
            @name: ~`"chaos-@{value}"`;
            @signed: `@{index} % 2===0 ? 1 : -1`;

            @keyframes @name {
                0% {
                    transform: scale(1) translate3d(0, 0, 0);
                }

                25% {
                    .makeRandom(1, 20, 0);
                    transform: scale(0.95) translate3d(unit(@randNum, px), unit((@randNum / 2) * @signed, px), unit(@randNum * 0.8, px));
                }

                50% {
                    .makeRandom(1, 20, 0);
                    transform: scale(1) translate3d(unit((@randNum * 0.9) * @signed, px), unit((@randNum * 0.9), px), unit((@randNum * 0.7) * @signed, px));
                }

                75% {
                    .makeRandom(1, 20, 0);
                    transform: scale(1.05) translate3d(unit((@randNum / 4) * @signed, px), unit(@randNum, px), unit(@randNum * 0.7, px));
                }

                100% {
                    transform: scale(1) translate3d(0, 0, 0);
                }
            }
        }

    )
}

// 渐变效果
.fade {
    @keyframes fade {
        from {
            opacity: 0;
            transform: translateY(-20%);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    animation: fade 1.2s linear 1 forwards;
}
